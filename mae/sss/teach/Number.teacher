//Factory class to make Number instances
class mae.tut.num.Factory
//Make a Whole
t = Factory.newWhole(2); //--> 2
//Its value?
//+2 (as float)
t.value(); //--> 2.0
//Its inverse?
//+A new Number 1/2
x = t.inverse(); //--> 1/2
//Add t=2 to x=1/2
//+and get 5/2
a = x.add(t); //--> 5/2
//Its value?
//+2.5 (as float)
a.value(); //--> 2.5
//Multiply 1/2 by 2
//+and get one
one = x.mult(t); //--> 1
//Make a Decimal
y = Factory.newDecimal(0.5); //--> 0.5
//Is it equal to 1/2?
//+Yes
y.equals(x); //--> true
//Add t=2 to y=0.5
//+and get 2.5
b = y.add(t); //--> 2.5
//Is b equal to a?
//+Yes
b.equals(a); //--> true
//How about a Complex?
//+This is i*pi
z = Factory.newComplex(0.0, 3.1416); //--> (0.0, 3.1416)
//Its angle?
//+90 degrees
//+Since it has no real part
z.angle(); //--> 90.0

//Cruncher class is similar to java.lang.Math
class mae.tut.num.Cruncher
//Cruncher class is similar to java.lang.Math
//but it needs an instance
C = Factory.cruncher(); //--> @10e35d5 
//Cruncher class knows exponentials:
//+This is e (as a float, not an object)
Cruncher.exp(1.0); //--> 2.718282
//What is "e to the one"?
//+e, in Decimal form
e = C.exp(one); //--> 2.7182817
//What is "e to the one"?
//Using power series
//+e, in Rational form
r = C.expPS(one); //--> 13563139/4989600
//What is "e to the one"?
//+Quite a good approximation
r.value(); //--> 2.7182817
//Are they the same?
//+Yes
r.equals(e); //--> true
//What is "e to i*pi"?
//+Every math student knows that it is equal to -1
m = C.exp(z); //--> (-1.0, -7.1045342E-6)
//Is it close enough to 1?
//+Perfectly...
m.value(); //--> 1.0
